{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/useActiveWeb3React.ts","components/Layout/Row.tsx","state/mint/actions.ts","state/swap/actions.ts","utils/bigNumber.ts","utils/formatBalance.ts","config/constants/tokens.ts","components/Layout/Column.tsx","utils/index.ts","config/constants/index.ts","utils/contractHelpers.ts","state/user/hooks/index.tsx","hooks/useContract.ts","config/constants/types.ts","components/Balance.tsx","state/types.ts","utils/multicall.ts","state/user/actions.ts","utils/wrappedCurrency.ts","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","views/Pools/helpers.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","state/predictions/helpers.ts","state/predictions/queries.ts","state/multicall/hooks.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","config/index.ts","config/constants/lists.ts","state/lists/hooks.ts","state/user/hooks/helpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/lists/actions.ts","utils/prices.ts","state/multicall/actions.ts","config/constants/nfts.ts","components/QuestionHelper/index.tsx","config/constants/pools.ts","config/constants/endpoints.ts","utils/providers.ts","hooks/useTheme.ts","state/block/hooks.ts","hooks/useToast.ts","state/wallet/hooks.ts","hooks/usePairs.ts","hooks/useBUSDPrice.ts","state/farms/hooks.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/predictions/config.ts","hooks/useRefresh.ts","state/transactions/hooks.tsx","state/transactions/actions.ts","state/info/actions.ts","state/lottery/helpers.ts","utils/compoundApyHelpers.ts","utils/getGasPrice.ts","config/localization/languages.ts","components/ConnectWalletButton.tsx","state/profile/helpers.ts","state/profile/index.tsx","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","components/Card/index.tsx","state/swap/hooks.ts","state/swap/constants.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","hooks/useCallWithGasPrice.ts","state/lottery/index.ts","hooks/useTokenBalance.ts","utils/isZero.ts","contexts/Localization/helpers.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","hooks/useDebounce.ts","hooks/useAuth.ts","utils/wallet.ts","utils/currencyId.ts","utils/uriToHttp.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","state/profile/hooks.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/Tags.tsx","utils/web3React.ts","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","components/App/LiquidityBody.tsx","components/App/SwapBody.tsx","state/block/index.ts","components/Loader/CircleLoader.tsx","utils/getRpcUrl.ts","state/lottery/getUserLotteryData.ts","utils/ENS/parseENSAddress.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","config/constants/campaigns.ts","components/SearchModal/filtering.ts","hooks/usePersistState.ts","utils/collectibles.ts","components/Loader/Dots.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens.ts","config/constants/meta.ts","components/Layout/Page.tsx","hooks/useLastUpdated.ts","hooks/usePreviousValue.ts","views/Page.tsx","state/lottery/getUserTicketsData.ts","routerHistory.ts","components/TokenImage/index.tsx","config/constants/ifo.ts","hooks/useIsWindowVisible.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/pools/helpers.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","utils/achievements.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/lottery/hooks.ts","components/Layout/Container.tsx","utils/truncateHash.ts","components/Loader/PageLoader.tsx","state/collectibles/index.ts","utils/getTimePeriods.ts","components/PositionCard/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","state/lottery/getLotteriesData.ts","components/Select/Select.tsx","components/Loading.tsx","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmHelpers.ts","utils/apr.ts","hooks/useParsedQueryString.ts","components/Layout/Flex.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","views/Collectibles/helpers.ts","views/Collectibles/hooks/useBunnySpecialLottery.tsx","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","state/pools/hooks.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/components/Header.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","views/Collectibles/components/NftGiveawayModal.tsx","views/Collectibles/components/GlobalCheckClaimStatus.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","getAddress","address","chainId","ChainId","MAINNET","getCakeAddress","tokens","cake","getMasterChefAddress","addresses","getMulticallAddress","getWbnbAddress","wbnb","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","useActiveWeb3React","useWeb3React","library","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","process","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","typeInput","createAction","resetMintState","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","formatLocalisedCompactNumber","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","CAKE","Token","TESTNET","BUSD","WBNB","DAI","USDT","GUSD","veGas","FBX","FLP","BTCB","UST","ETH","USDC","bnb","symbol","projectLink","got","qbt","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","gusd","fbx","flp","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","Column","ColumnCenter","AutoColumn","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","BASES_TO_CHECK_TRADES_AGAINST","WETH","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","muteAudio","unmuteAudio","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","updateUserSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","FarmStakedOnly","TRUE","FALSE","updateUserFarmStakedOnly","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","updateUserDeadline","useAddUserToken","token","addSerializedToken","serializedToken","serializeToken","useRemoveUserAddedToken","removeSerializedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","useGasPriceManager","updateGasPrice","useReferralManager","referral","updateReferral","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","useMemo","generatedPairs","flatMap","tokenAddress","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","useWatchlistTokens","watchlistTokens","addWatchlistToken","useWatchlistPools","watchlistPools","addWatchlistPool","useERC20","useERC721","useCake","useBunnyFactory","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","useCakeVaultContract","usePredictionsContract","useBunnySpecialLotteryContract","useFarmAuctionContract","useContract","withSignerIfPossible","error","console","useTokenContract","ERC20_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","PoolIds","NftType","LotteryStatus","AuctionStatus","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","multicall","calls","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","removeSerializedPair","toggleTheme","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","protocol","overview","chartData","transactions","pools","byAddress","createReducer","builder","addCase","updateProtocolData","protocolData","payload","updateProtocolChartData","updateProtocolTransactions","updatePoolData","poolData","addPoolKeys","poolAddresses","updatePoolChartData","poolAddress","updatePoolTransactions","updateTokenData","tokenData","addTokenKeys","tokenAddresses","priceData","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","default","lastUpdateVersionTimestamp","action","tokenAAddress","tokenBAddress","tokenWatchlist","includes","newTokens","x","poolsWatchlist","newPools","now","addTransaction","hash","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","blockNumber","tx","lastCheckedBlockNumber","Math","max","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","callResults","addMulticallListeners","blocksPerFetch","listeners","callListeners","callKey","toCallKey","removeMulticallListeners","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","results","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","info","infoReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useAppDispatch","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","performanceFee","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","loading","useCurrency","isBNB","toUpperCase","Result","numberOrNull","valueNum","Number","isNaN","transformBetResponse","betResponse","bet","parseFloat","position","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getFilteredBets","COLLECTED","UNCOLLECTED","ALL","getBetHistory","where","first","skip","request","GRAPH_API_PREDICTION","gql","response","getLedgerData","epochs","ledgerCalls","LEADERBOARD_RESULTS_PER_PAGE","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","accum","claimableResponse","index","claimable","getPredictionData","staticCalls","method","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PAUSED","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","parseBigNumberObj","fetchUsersRoundsLength","contract","getUserRoundsLength","fetchUserRounds","cursor","ROUNDS_PER_PAGE","getUserRounds","isMethodArg","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","Infinity","useCallsData","serializedCallKeys","JSON","stringify","c","sort","callKeys","parse","parseCallKey","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","inputs","callData","useBlock","useMultipleContractSingleData","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","GAS_PRICE","parseUnits","fast","instant","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingFlamez","pendingReward","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","isLoading","lastDepositedTime","lastUserActionTime","userDataLoaded","cakeVault","fees","userData","fetchPoolsPublicDataAsync","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","tokenPerBlock","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","createAsyncThunk","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","images","lg","md","sm","ipfs","video","webm","mp4","sortOrder","identifier","variationId","blur","QuestionWrapper","QuestionHelper","text","placement","useTooltip","trigger","targetRef","tooltip","tooltipVisible","ref","CORE","harvest","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","GRAPH_API_PREDICTION_V1","INFO_CLIENT","BLOCKS_CLIENT","RPC_URL","getRpcUrl","providers","JsonRpcProvider","useTheme","theme","StyledThemeContext","usePollBlockNumber","timer","isWindowVisible","useIsWindowVisible","setInterval","getBlockNumber","setBlock","clearInterval","useInitialBlock","initialBlock","useToast","toastContext","ToastsContext","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","BUSD_MAINNET","useBUSDPrice","wrapped","tokenPairs","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","price","priceOf","Price","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","quote","greaterThan","ethBusdPrice","currencyEthPrice","busdPrice","usePollFarmsPublicData","includeArchive","useRefresh","slowRefresh","pids","farmsConfig","nonArchivedFarms","farmToFetch","pid","fetchFarmsPublicDataAsync","usePollFarmsWithUserData","fetchFarmUserDataAsync","usePollCoreFarmData","fastRefresh","useFarms","useFarmFromPid","f","useFarmUser","farm","tokenBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakePriceBusdAsString","useTotalValue","bnbPrice","cakePrice","val","plus","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","mediaQueries","Toast","toast","onRemove","ttl","removeHandler","title","handleRemove","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","DescriptionWithTx","txHash","as","external","href","truncateHash","REWARD_RATE","ROUND_BUFFER","PAST_ROUND_COUNT","FUTURE_ROUND_COUNT","LEADERBOARD_MIN_ROUNDS_PLAYED","RefreshContext","slow","useAllTransactions","isTransactionRecent","allTransactions","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","days","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","getGasPrice","code","languageList","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfileAvatar","hasRegistered","getUserProfile","getNftByTokenId","nft","getProfile","getTeam","team","Cookies","avatar","domain","secure","expires","isInitialized","profileAvatars","fetchProfileAvatar","fetchProfileUsername","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","profileClear","addPoints","fetchProfile","fetchFarm","lpAddresses","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","CustomGreyCard","dropdown","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useParsedQueryString","setResult","getTokenLogoURL","StyledLogo","uriLocations","log","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","isTransitioning","currentRound","lotteriesData","userLotteryData","totalCake","totalTickets","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","getUserLotteryData","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","getGraphLotteryUser","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","FetchStatus","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useBurnedBalance","setBalance","balanceOf","fetchBalance","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","FAILED","refresh","balanceState","setBalanceState","prev","isZero","hexNumberString","getItem","EditingCurrency","CalculatorMode","Footer","Flex","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","my","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","flexDirection","expanded","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","justifyContent","alignItems","mr","height","fontSize","display","mt","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","RoiCardInner","RoiInputContainer","primary","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","bold","textTransform","inputMode","pattern","scale","placeholder","onChange","event","currentTarget","rotate","keyframes","ArrowContainer","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","headerBackground","mb","asset","currencyValue","innerRef","switchEditingUnits","onFocus","borderColor","lte","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","useDebounce","delay","debouncedValue","setDebouncedValue","handler","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","uriToHttp","uri","substr","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","currencyToAdd","strokeWidth","isMetaMask","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","useFetchProfile","hasProfile","useGetProfileAvatar","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","TransactionState","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","useModal","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","Link","show","GlobalSettings","BodyWrapper","AppBody","LiquidityBodyWrapper","LiquidityCard","LiquidityBody","SwapBodyWrapper","SwapCard","SwapBody","blockSlice","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","sample","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","splice","blankUser","userRes","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","parseENSAddress","ensAddress","ensPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","StyledInput","input","inputRegex","Input","React","nextUserInput","target","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","className","campaigns","badge","campaignMap","campaign","search","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","defaultOptions","hydrate","identity","dehydrate","usePersistState","userOptions","localStorageKey","valueFromLS","setValue","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","fetchCachedUriData","tokenUrl","localUriData","uriDataResponse","uriData","getTokenUriData","tokenURI","Dots","span","textColor","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","serializedTokensMap","DEFAULT_META","StyledPage","PageMeta","pathname","useLocation","cakePriceUsd","pageMeta","getCustomMeta","pageTitle","join","property","Page","setStateLastUpdated","previousLastUpdated","usePreviousValue","xs","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","history","createBrowserHistory","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","transformUserData","transformPool","quoteTokenAddress","toLocaleLowerCase","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","DetailsFooter","invertedContrast","UnsupportedModal","maxWidth","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","src","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridGap","userSelect","maxAmountSpend","SlippageError","DeadlineError","SlippageTabs","slippageError","setUserSlippageTolerance","slippageInput","setSlippageInput","deadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","flexWrap","onBlur","e","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setRememberExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","prompt","GasSettings","setGasPrice","SettingsModal","showConfirmExpertModal","overflowY","pb","fontWeight","borderTop","TransactionSettings","onPresentSettingsModal","ens","resolvedContentHash","useENSContentHash","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","currencyAAmount","currencyBAmount","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","loadingState","filters","timePeriod","hasMoreResults","addressResults","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","page","userRoundsLength","emptyResult","maxPages","ceil","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","predictionsSlice","setLeaderboardFilter","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","IDLE","newestRound","maxBy","futureRound","futureRounds","useGetCurrentLotteryId","useGetUserLotteriesGraphData","useGetUserLotteryGraphRoundById","userRound","useGetLotteriesGraphData","useGetLotteryGraphDataById","useFetchLottery","useLottery","processedCurrentRound","maxNumberTicketsPerBuyOrClaimAsString","startLength","endLength","PageLoader","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","FullPositionCard","role","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","onOptionChange","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","option","selectedIndex","Loading","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","parseArrays","ignoreQueryPrefix","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","active","tertiary","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","NO_CLAIM","canClaim","mintData","getLottieClaim","lotteryNftContract","canClaimNft1","bunnyId","getLuckyClaim","claimedWinningRounds","winningRound","claimedTickets","winningTicketCursor","canClaimNft2","getBallerClaim","userWhitelistForNft3","canClaimNft3","useBunnySpecialLottery","currentLotteryIdNum","setUserRounds","lotteryNftContractAddress","startRound","finalRound","startLotteryRoundInt","finalLotteryRoundInt","lotteryIdsArray","lottery_in","userParticipation","getUserData","canClaimLottie","lottieClaim","canClaimLucky","luckyClaim","canClaimBaller","Updater","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","minHeight","ViewMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","gradients","bubblegum","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","globalMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","endIcon","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","userReferral","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","fullDecimalStakeAmount","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","BaseCell","CellContent","StyledCell","NameCell","isMobile","useMatchBreakpoints","hasVaultShares","showStakedTag","showSubtitle","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","AutoHarvestAction","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isXs","isSm","isMd","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","AutoHarvest","Harvest","Stake","HelpIconWrapper","AutoEarningsCell","AutoAprCell","StyledRow","PoolRow","isLg","isXl","isXxl","isTablet","isDesktop","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardWraper","Content","Header","img","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","NaN","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","Swap","loadedUrlParams","clickIndex1","setIndex","loadedInputCurrency","loadedOutputCurrency","setInputedCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","setSelectedAddress","inputId","outputId","newAddresses","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirm","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","marginBottom","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","NftImage","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","y","NftGiveawayModal","nfts","GlobalCheckClaimStatus","excludeLocations","hasDisplayedModal","claimableNfts","setClaimableNfts","onPresentGiftModal","nftConfigMap","lottie","lucky","baller","isBallerClaimable","isLottieClaimable","isLuckyClaimable","fetchClaimStatus","matchesSomeLocations","Farms","lazy","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","PredictionsLeaderboard","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Info","Referral","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6000d566.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","export default {\n  masterChef: {\n    1978: '0x6e2c1dbAd941dC69457264ABa9110Ef7D2553679',\n    56: '0x8Ab88fafA3D33077E96F76879a2179289b7AbEB6',\n  },\n  sousChef: {\n    1978: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    1978: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    1978: '0x3BF1AbA6bFcBa09C1161887ee03f3F1033EAdF60',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    1978: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    1978: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    1978: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    1978: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    1978: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    1978: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    1978: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    1978: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    1978: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n  },\n  predictions: {\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    1978: '',\n  },\n  chainlinkOracle: {\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\n    1978: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    1978: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    1978: '',\n  },\n  bunnySpecialLottery: {\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    1978: '0x382cB497110F398F0f152cae82821476AE51c9cF',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    1978: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x05c86418c11d610d28268e0C2aF2C2386fB38FDd',\n    18,\n    'AME',\n    'FLAMEZ',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'AME',\n    'FLAMEZ',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0x55f6e29e5e11d972507f17fc41a8d8FC19eD0cD5',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\n///\nexport const GOT = new Token(ChainId.MAINNET, '0x3Fa2b39471Af5d82bd7107a995FEE4C580ad723C', 18, 'GOT', 'GOT Token')\nexport const Flamez = new Token(ChainId.MAINNET, '0x05c86418c11d610d28268e0C2aF2C2386fB38FDd', 18, 'AME', 'FLAMEZ')\n///\n\nexport const WBNB = new Token(ChainId.MAINNET, '0x35d04AA7c2205CBf11b040e0243BF896Dd2a4FFb', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55f6e29e5e11d972507f17fc41a8d8FC19eD0cD5', 18, 'USDT', 'Tether USD')\nexport const GUSD = new Token(ChainId.MAINNET, '0xB261D56b2b7E520544cf1624dCD379C8C1390E46', 18, 'GUSD', 'GUSD Token')\nexport const veGas = new Token(ChainId.MAINNET, '0x1b801F64d0f93C37CDDFE34e62F60722b9af670e', 18, 'veGAS', 'ButaneDao Token')\nexport const FBX = new Token(ChainId.MAINNET, '0x7Ae4C9Be5053603c980b7101858e234594C77dB5', 18, 'FBX', 'FBX Token')\nexport const FLP = new Token(ChainId.MAINNET, '0xd4835453BD71dBfE1ff0f4530c61966B6A26BB9E', 18, 'FLP', 'FLP Token')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BBC',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'Flamez',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      1978: '0x05c86418c11d610d28268e0C2aF2C2386fB38FDd',\n    },\n    decimals: 18,\n    projectLink: 'https://flamez.io/',\n  },\n  got: {\n    symbol: 'GOT',\n    address: {\n      56: '0x6785342b199aa152f69f577ac241a88663b5d57a',\n      1978: '0x3Fa2b39471Af5d82bd7107a995FEE4C580ad723C',\n    },\n    decimals: 18,\n    projectLink: 'https://flamez.io/',\n  },\n  qbt: {\n    symbol: 'QBT',\n    address: {\n      56: '0x17B7163cf1Dbd286E262ddc68b553D899B93f526',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://qbt.fi/',\n  },\n  pha: {\n    symbol: 'PHA',\n    address: {\n      56: '0x0112e557d400474717056C4e6D40eDD846F38351',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://phala.network',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      1978: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      1978: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      1978: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      1978: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      1978: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      1978: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      1978: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      1978: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      1978: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      1978: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      1978: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      1978: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBBC',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      1978: '0x35d04AA7c2205CBf11b040e0243BF896Dd2a4FFb',\n    },\n    decimals: 18,\n    projectLink: 'https://flamez.io/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      1978: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      1978: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      1978: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      1978: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      1978: '0x55f6e29e5e11d972507f17fc41a8d8FC19eD0cD5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      1978: '0x55f6e29e5e11d972507f17fc41a8d8FC19eD0cD5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  gusd: {\n    symbol: 'GUSD',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      1978: '0xB261D56b2b7E520544cf1624dCD379C8C1390E46',\n    },\n    decimals: 18,\n    projectLink: '',\n  },\n  veGas: {\n    symbol: 'veGAS',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      1978: '0x1b801F64d0f93C37CDDFE34e62F60722b9af670e',\n    },\n    decimals: 18,\n    projectLink: '',\n  },\n  fbx: {\n    symbol: 'FBX',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      1978: '0x7Ae4C9Be5053603c980b7101858e234594C77dB5',\n    },\n    decimals: 18,\n    projectLink: '',\n  },\n  flp: {\n    symbol: 'FLP',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      1978: '0xd4835453BD71dBfE1ff0f4530c61966B6A26BB9E',\n    },\n    decimals: 18,\n    projectLink: '',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      1978: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      1978: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      1978: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      1978: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      1978: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      1978: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      1978: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      1978: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      1978: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      1978: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      1978: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      1978: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      1978: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      1978: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      1978: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  pots: {\n    symbol: 'POTS',\n    address: {\n      56: '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://moonpot.com/',\n  },\n  gnt: {\n    symbol: 'GNT',\n    address: {\n      56: '0xf750a26eb0acf95556e8529e72ed530f3b60f348',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.greentrusttoken.com/',\n  },\n  rusd: {\n    symbol: 'rUSD',\n    address: {\n      56: '0x07663837218a003e66310a01596af4bf4e44623d',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://appv2.rampdefi.com/#/',\n  },\n  bp: {\n    symbol: 'BP',\n    address: {\n      56: '0xacb8f52dc63bb752a51186d1c55868adbffee9c1',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bunnypark.com/',\n  },\n  sfund: {\n    symbol: 'SFUND',\n    address: {\n      56: '0x477bc8d23c634c154061869478bce96be6045d12',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://seedify.fund/ ',\n  },\n  naos: {\n    symbol: 'NAOS',\n    address: {\n      56: '0x758d08864fb6cce3062667225ca10b8f00496cc2',\n      1978: '',\n    },\n    decimals: 18,\n    projectLink: 'https://naos.finance/',\n  },\n}\n\nexport default tokens\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function formatNumber(\n  unformatted: number | string | undefined,\n  showDigits = 2,\n) {\n  // get fraction digits for small number\n  if (!unformatted) return 0;\n  const absNumber = Math.abs(Number(unformatted));\n  if (absNumber > 0) {\n    const digits = Math.ceil(Math.log10(1 / absNumber));\n    if (digits < 3) {\n      return Number(unformatted).toLocaleString('us');\n    } \n      return Number(unformatted).toFixed(digits + showDigits);\n  } \n    return 0;\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC, GUSD, veGas, FBX, FLP } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x16e7DB1Cc8916a02178587B50c00Fd5501B1575c'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, GUSD, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [GUSD, CAKE[ChainId.MAINNET], veGas, FBX, FLP],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], GUSD],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    // [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateReferral,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nexport function useReferral(): string {\n  const referral = useSelector<AppState, AppState['user']['referral']>((state) => state.user.referral)\n  return referral\n}\n\nexport function useReferralManager(): [string, (userReferral: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userReferral = useReferral()\n\n  const setReferral = useCallback(\n    (referral: string) => {\n      dispatch(updateReferral({ referral }))\n    },\n    [dispatch],\n  )\n\n  return [userReferral, setReferral]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Flamez-LP', 'Flamez LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  1978: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n  profileAvatars: {\n    [key: string]: {\n      username: string\n      nft: Nft\n    }\n  }\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport enum LeaderboardLoadingState {\n  INITIAL,\n  LOADING,\n  IDLE,\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    loadingState: LeaderboardLoadingState\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error:any) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\nexport const updateReferral = createAction<{ referral: string }>('user/updateReferral')\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {\n    overview: undefined,\n    chartData: undefined,\n    transactions: undefined,\n  },\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress]?.priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  updateGasPrice,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n  updateReferral,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  gasPrice: string\n  referral: string\n  watchlistTokens: string[]\n  watchlistPools: string[]\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: true,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  gasPrice: GAS_PRICE_GWEI.default,\n  referral: '',\n  watchlistTokens: [],\n  watchlistPools: [],\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(updateReferral, (state, action) => {\n      state.referral = action.payload.referral\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport infoReducer from './info'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile', 'collectibles']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n    info: infoReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BBC'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()} \n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bbcscan.io',\n  [ChainId.TESTNET]: 'https://testnet.bbcscan.io',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://flamez-dex.netlify.app'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BBC')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BBC')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BBC' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BBC')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BBC')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingFlamez('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      1978: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      1978: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Baller',\n    description: 'Absolute (lottery) baller.',\n    images: {\n      lg: 'baller-lg.png',\n      md: 'baller-md.png',\n      sm: 'baller-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.webm`,\n      mp4: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'baller',\n    type: NftType.PANCAKE,\n    variationId: 20,\n  },\n  {\n    name: 'Lucky',\n    description: \"Lucky's got the golden ticket!\",\n    images: {\n      lg: 'lucky-lg.png',\n      md: 'lucky-md.png',\n      sm: 'lucky-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.webm`,\n      mp4: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'lucky',\n    type: NftType.PANCAKE,\n    variationId: 19,\n  },\n  {\n    name: 'Lottie',\n    description: \"Lottie's looking hotto for lotto!\",\n    images: {\n      lg: 'lottie-lg.png',\n      md: 'lottie-md.png',\n      sm: 'lottie-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.webm`,\n      mp4: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'lottie',\n    type: NftType.PANCAKE,\n    variationId: 18,\n  },\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png`,\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm`,\n      mp4: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png`,\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png'`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm`,\n      mp4: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png`,\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png`,\n    },\n    video: {\n      webm: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm`,\n      mp4: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4`,\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png`,\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png`,\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png`,\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png`,\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png`,\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png`,\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png`,\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png`,\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png`,\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png`,\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n  placement?: Placement\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cake,\n    contractAddress: {\n      1978: '0x6e2c1dbAd941dC69457264ABa9110Ef7D2553679',\n      56: '0x63c618917E5632367f9f9f9D7F11E596d414a731',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 1,\n    isFinished: false,\n  },\n]\n\nexport default pools\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n// export const INFO_CLIENT = 'https://dynograph.io/subgraphs/name/exchange' // 'http://66.165.225.90:1111/subgraphs/name/exchange' // http://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2\n// export const BLOCKS_CLIENT = 'https://dynograph.io/subgraphs/name/blocks' // 'http://66.165.225.90:1111/subgraphs/name/blocks' // https://api.thegraph.com/subgraphs/name/pancakeswap/blocks\nexport const INFO_CLIENT = 'https://subgraphs.butane.tech/subgraphs/name/exchange'\nexport const BLOCKS_CLIENT = 'https://subgraphs.butane.tech/subgraphs/name/blocks'","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, 6000)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { ChainId, Currency, currencyEquals, JSBI, Price, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BUSD, CAKE, WBNB } from '../config/constants/tokens'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst BUSD_MAINNET = BUSD[ChainId.MAINNET]\n\n/**\n * Returns the price in BUSD of the input currency\n * @param currency currency to compute the BUSD price of\n */\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\n  const { chainId } = useActiveWeb3React()\n  const wrapped = wrappedCurrency(currency, chainId)\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\n    () => [\n      [\n        chainId && wrapped && currencyEquals(WETH[chainId], wrapped) ? undefined : currency,\n        chainId ? WETH[chainId] : undefined,\n      ],\n      [wrapped?.equals(BUSD_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n      [chainId ? WETH[chainId] : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\n    ],\n    [chainId, currency, wrapped],\n  )\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\n\n  return useMemo(() => {\n    if (!currency || !wrapped || !chainId) {\n      return undefined\n    }\n    // handle weth/eth\n    if (wrapped.equals(WETH[chainId])) {\n      if (busdPair) {\n        const price = busdPair.priceOf(WETH[chainId])\n        return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n      }\n      return undefined\n    }\n    // handle busd\n    if (wrapped.equals(BUSD_MAINNET)) {\n      return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1')\n    }\n\n    const ethPairETHAmount = ethPair?.reserveOf(WETH[chainId])\n    const ethPairETHBUSDValue: JSBI =\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WETH[chainId]).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\n\n    // all other tokens\n    // first try the busd pair\n    if (\n      busdPairState === PairState.EXISTS &&\n      busdPair &&\n      busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)\n    ) {\n      const price = busdPair.priceOf(wrapped)\n      return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\n    }\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\n      if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WETH[chainId]).greaterThan('0')) {\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET)\n        const currencyEthPrice = ethPair.priceOf(WETH[chainId])\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\n        return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator)\n      }\n    }\n    return undefined\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\n}\n\nexport const useCakeBusdPrice = (): Price | undefined => {\n  const { chainId } = useActiveWeb3React()\n  const currentChaindId = chainId || ChainId.MAINNET\n  const cakeBusdPrice = useBUSDPrice(CAKE[currentChaindId])\n  return cakeBusdPrice\n}\n\nexport const useBNBBusdPrice = (): Price | undefined => {\n  const bnbBusdPrice = useBUSDPrice(WBNB)\n  return bnbBusdPrice\n}\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport { farmsConfig } from 'config/constants'\nimport tokens from 'config/constants/tokens'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsPublicData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [includeArchive, dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1, 2, 3]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(3)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const { data: farms, userDataLoaded } = useFarms()\n  const bnbPrice = useBNBBusdPrice()\n  const cakePrice = usePriceCakeBusd()\n  \n  let value = new BigNumber(0)\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val\n      if (farm.quoteToken.symbol === tokens.bnb.symbol || farm.quoteToken.symbol === tokens.wbnb.symbol ) {\n        if (bnbPrice) {\n          val = (new BigNumber(bnbPrice.toFixed()).times(farm.lpTotalInQuoteToken))\n        } else {\n          val = 0\n        }\n      } else if (farm.quoteToken.symbol === tokens.cake.symbol) {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken))\n      } else {\n        val = (farm.lpTotalInQuoteToken)\n      }\n      value = value.plus(val)\n    }\n  }\n  return value\n}","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","import React from 'react'\nimport { Link, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          {t('View on BBCScan')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 1000\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { createAction } from '@reduxjs/toolkit'\nimport { Transaction } from 'state/info/types'\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\n\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\n  'info/protocol/updateProtocolChartData',\n)\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\n  'info/protocol/updateProtocolTransactions',\n)\n\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\n  'info/pools/updatePoolChartData',\n)\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'info/pools/updatePoolTransactions',\n)\n\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'info/tokens/addTokenPoolAddresses',\n)\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\n  'info/tokens/updateTokenChartData',\n)\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'info/tokens/updateTokenTransactions',\n)\nexport const updateTokenPriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData?: PriceChartEntry[]\n  oldestFetchedTimestamp: number\n}>('info/tokens/updateTokenPriceData')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import Cookies from 'js-cookie'\nimport { Profile } from 'state/types'\nimport { GetUserProfileResponse } from 'utils/types'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { getTeam } from 'state/teams/helpers'\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: userId.toNumber(),\n    points: numberPoints.toNumber(),\n    teamId: teamId.toNumber(),\n    tokenId: tokenId.toNumber(),\n    nftAddress,\n    isActive,\n  }\n}\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport const getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Intended to be used for getting a profile avatar\n */\nexport const getProfileAvatar = async (address: string) => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return null\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n\n    if (!isActive) {\n      return null\n    }\n\n    const nft = await getNftByTokenId(nftAddress, tokenId)\n    return nft\n  } catch {\n    return null\n  }\n}\n\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport { Nft } from 'config/constants/types'\nimport { getProfile, getProfileAvatar, GetProfileResponse, getUsername } from './helpers'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n  profileAvatars: {},\n}\n\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: Nft }, string>(\n  'profile/fetchProfileAvatar',\n  async (account) => {\n    const nft = await getProfileAvatar(account)\n    return { account, nft }\n  },\n)\n\nexport const fetchProfileUsername = createAsyncThunk<{ account: string; username: string }, string>(\n  'profile/fetchProfileUsername',\n  async (account) => {\n    const username = await getUsername(account)\n    return { account, username }\n  },\n)\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      state.isInitialized = true\n      state.isLoading = false\n      state.hasRegistered = hasRegistered\n      state.data = profile\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\n      const { account, username } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username,\n        }\n      } else {\n        state.profileAvatars[account] = { username, nft: null }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\n      const { account, nft } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft,\n        }\n      } else {\n        state.profileAvatars[account] = { username: null, nft }\n      }\n    })\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBBC']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBBC') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBBC') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBBC') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBBC') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingFlamez',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    // const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsToFetch)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const CustomGreyCard = styled(Card)`\n  border: 1px solid #0094FF;\n  background: radial-gradient(43.91% 300.21% at 56.09% -78.09%, rgba(0, 0, 0, 0.5) 21.87%, rgba(0, 0, 0, 0.5) 100%) /* warning: gradient uses a rotation that is not supported by CSS and may not behave as expected */;\n  opacity: 0.8;\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\nimport { DEFAULT_INPUT_CURRENCY, DEFAULT_OUTPUT_CURRENCY } from './constants'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BBC' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BBC') return 'BBC'\n    if (valid === false) return 'BBC'\n  }\n  return ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency) || DEFAULT_INPUT_CURRENCY\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency) || DEFAULT_OUTPUT_CURRENCY\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","// BNB\nexport const DEFAULT_INPUT_CURRENCY = 'BBC'\n// USDT\nexport const DEFAULT_OUTPUT_CURRENCY = '0xB261D56b2b7E520544cf1624dCD379C8C1390E46'\n","// const getTokenLogoURL = (address: string) =>\n//   `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nconst getTokenLogoURL = (address: string) =>\n  `http://flamez-dex.netlify.app/images/tokens/${address}.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return [...uriLocations, getTokenLogoURL('0xc71691d2586722307Bc1105F01E2C312b43d02E5')]\n    \n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo || currency === ETHER) {\n        console.log(currency.address);\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  // if (currency === ETHER) {\n  //   return <BinanceIcon width={size} style={style} />\n  // }\n\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'Flamez',\n    lpAddresses: {\n      1978: '0x05c86418c11d610d28268e0C2aF2C2386fB38FDd',\n      56: '0x63c618917E5632367f9f9f9D7F11E596d414a731',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'Flamez-BBC LP',\n    lpAddresses: {\n      1978: '0x3f5A93E45756f08659Ab31f0dA851bF62E9775b4',\n      56: '0x63c618917E5632367f9f9f9D7F11E596d414a731',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'GUSD-BBC LP',\n    lpAddresses: {\n      1978: '0x9Ed5F1C5ee394c0a487e7E6666a97e95c4bF8feE',\n      56: '0x63c618917E5632367f9f9f9D7F11E596d414a731',\n    },\n    token: tokens.gusd,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'Flamez-GUSD LP',\n    lpAddresses: {\n      1978: '0x9744C73f19bc0AE2119dF829962e08ca74CC56B4',\n      56: '0x63c618917E5632367f9f9f9D7F11E596d414a731',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.gusd,\n  }\n]\n\nexport default farms\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  // background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of AME rewards each farm receives, as a proportion of the AME produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 AME per block, a 40x farm would receive 40 AME per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (AME yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: radial-gradient(43.91% 300.21% at 56.09% -78.09%,rgba(38,108,192,0.5) 21.87%,rgba(26,76,156,0.5) 100%);\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.primary};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        // background: linear-gradient(\n        //   to right,\n        //   ${theme.colors.background}00,\n        //   ${theme.colors.background}E6\n        // );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"primary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} \n          {/* (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %) */}\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'FLAMEZ',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"primary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            color='tertiary'\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              style={{color:\"#268ac4\", borderColor:\"#268ac4\"}}\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              style={{color:\"#268ac4\", borderColor:\"#268ac4\"}}\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              style={{color:\"#268ac4\", borderColor:\"#268ac4\"}}\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"primary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"primary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Butan Chain Mainnet',\n            nativeCurrency: {\n              name: 'BBC',\n              symbol: 'BBC',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BBC'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BBCScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (!username && nft && address) {\n      dispatch(fetchProfileUsername(account))\n    }\n  }, [account, nft, username, dispatch])\n\n  return { username, nft }\n}\n","import { ethers, Contract, Overrides } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  overrides: Overrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount, referral) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, referral, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, referral, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount, referral) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid, referral) => {\n  const gasPrice = getGasPrice()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', referral, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"primary\" scale=\"sm\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LiquidityCard } from '@pancakeswap/uikit'\n\nexport const LiquidityBodyWrapper = styled(LiquidityCard)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function LiquidityBody({ children }: { children: React.ReactNode }) {\n  return <LiquidityBodyWrapper>{children}</LiquidityBodyWrapper>\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { SwapCard } from '@pancakeswap/uikit'\n\nexport const SwapBodyWrapper = styled(SwapCard)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function SwapBody({ children }: { children: React.ReactNode }) {\n  return <SwapBodyWrapper>{children}</SwapBodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'components/Toast'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n  :hover {\n    background-color: #070824;\n    \n  }\n\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background: radial-gradient(43.91% 300.21% at 56.09% -78.09%, rgba(38, 108, 192, 0.5) 21.87%, rgba(26, 76, 156, 0.5) 100%) /* warning: gradient uses a rotation that is not supported by CSS and may not behave as expected */;\n  opacity: 0.8;\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                style={{ color:\"#1cabe0\" }}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\" style={{color:\"#1cabe0\"}}>\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\" style={{color:\"#1cabe0\"}}>\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const fetchCachedUriData = async (tokenUrl: string) => {\n  try {\n    const localUriData = localStorage.getItem(tokenUrl)\n\n    if (localUriData) {\n      const data = JSON.parse(localUriData)\n      return data\n    }\n\n    const uriDataResponse = await fetch(tokenUrl)\n\n    if (!uriDataResponse.ok) {\n      throw new Error('Unable to fetch uriData')\n    }\n\n    const uriData = await uriDataResponse.json()\n    localStorage.setItem(tokenUrl, JSON.stringify(uriData))\n    return uriData\n  } catch (error) {\n    console.error(error)\n    return null\n  }\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriData = await fetchCachedUriData(getTokenUrl(tokenUri))\n\n    if (!uriData) {\n      return null\n    }\n\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { IPFS_GATEWAY } from './nfts'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'Flamez',\n  description: 'Flamez',\n  image: '',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('Flamez')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('Flamez')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('Flamez')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('Flamez')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('Flamez')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('Flamez')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('Flamez')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('Flamez')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('Flamez')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('Flamez')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('Flamez')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  let pageTitle = title\n  if (symbol) {\n    pageTitle = [symbol, title].join(' - ')\n  }\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\n  symbol?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, symbol, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      {children}\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[0].lpSymbol,\n  address: farms[0].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BBCScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      \n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setRememberExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({\n  setShowConfirmExpertModal,\n  setRememberExpertModeAcknowledgement,\n}) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setRememberExpertModeAcknowledgement(true)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React from 'react'\nimport { Flex, Button, Text } from '@pancakeswap/uikit'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\nimport { useGasPriceManager } from 'state/user/hooks'\n\nconst GasSettings = () => {\n  const { t } = useTranslation()\n  const [gasPrice, setGasPrice] = useGasPriceManager()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex mb=\"12px\" alignItems=\"center\">\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\n        <QuestionHelper\n          text={t(\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\n          )}\n          placement=\"top-start\"\n          ml=\"4px\"\n        />\n      </Flex>\n      <Flex flexWrap=\"wrap\">\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.default)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\n        >\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\n        </Button>\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.fast)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\n        >\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\n        </Button>\n        <Button\n          mr=\"4px\"\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.instant)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\n        >\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default GasSettings\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useAudioModeManager, useExpertModeManager, useUserSingleHopOnly } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport useTheme from 'hooks/useTheme'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\n\n// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\nconst PancakeToggleWrapper = styled.div`\n  .pancakes {\n    position: absolute;\n  }\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [rememberExpertModeAcknowledgement, setRememberExpertModeAcknowledgement] = usePersistState(false, {\n    localStorageKey: 'pancake_expert_mode_remember_acknowledgement',\n  })\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setRememberExpertModeAcknowledgement={setRememberExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (rememberExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px', overflowY: 'auto' }}\n    >\n      <Flex flexDirection=\"column\">\n        <Flex pb=\"24px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"16px\" color=\"primary\" mb=\"24px\" style={{fontWeight:\"bold\"}}>\n            {t('Global')}\n          </Text>\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\n          <Text bold textTransform=\"uppercase\" fontSize=\"16px\" color=\"primary\" mb=\"24px\" style={{fontWeight:\"bold\"}}>\n            {t('Swaps & Liquidity')}\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        \n      </Flex>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\">\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, LiquidityCardBody, Message, useModal, SwapCardBody } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { CustomGreyCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, SwapBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <SwapBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <SwapCardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <CustomGreyCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  {/* <LightCard padding=\"1rem\" borderRadius=\"20px\"> */}\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  {/* </LightCard> */}\n                </CustomGreyCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </SwapCardBody>\n      </SwapBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  LeaderboardLoadingState,\n  PredictionUser,\n  LeaderboardFilter,\n  State,\n} from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    loadingState: LeaderboardLoadingState.INITIAL,\n    filters: {\n      address: null,\n      orderBy: 'netBNB',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const roundData = await getRoundsData(epochs)\n  const claimableStatuses = await getClaimStatuses(account, epochs)\n\n  // Turn the data from the node into an Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const reduxRound = serializePredictionsRoundsResponse(round)\n    const ledger = userRounds[reduxRound.epoch]\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: false,\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\n  'predictions/filterLeaderboard',\n  async ({ filters }) => {\n    const usersResponse = await getPredictionUsers({\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    })\n\n    return { results: usersResponse.map(transformUserResponse) }\n  },\n)\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\n  const userResponse = await getPredictionUser(account)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: State }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers({\n    skip,\n    orderBy: state.predictions.leaderboard.filters.orderBy,\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\n  })\n\n  return { results: usersResponse.map(transformUserResponse), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n  },\n  extraReducers: (builder) => {\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from IDLE. This allows initialization.\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = merge([], state.history[account] ?? [], bets)\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markAsCollected,\n  setLeaderboardFilter,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useRefresh from 'hooks/useRefresh'\nimport { State } from '../types'\nimport { fetchCurrentLotteryId, fetchCurrentLottery, fetchUserTicketsAndLotteries, fetchPublicLotteries } from '.'\nimport { useProcessLotteryResponse } from './helpers'\n\n// Lottery\nexport const useGetCurrentLotteryId = () => {\n  return useSelector((state: State) => state.lottery.currentLotteryId)\n}\n\nexport const useGetUserLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.userLotteryData)\n}\n\nexport const useGetUserLotteryGraphRoundById = (lotteryId: string) => {\n  const userLotteriesData = useGetUserLotteriesGraphData()\n  return userLotteriesData.rounds.find((userRound) => userRound.lotteryId === lotteryId)\n}\n\nexport const useGetLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.lotteriesData)\n}\n\nexport const useGetLotteryGraphDataById = (lotteryId: string) => {\n  const lotteriesData = useGetLotteriesGraphData()\n  return lotteriesData?.find((lottery) => lottery.id === lotteryId)\n}\n\nexport const useFetchLottery = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n\n  useEffect(() => {\n    // get current lottery ID & max ticket buy\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    if (currentLotteryId) {\n      // Get historical lottery data from nodes +  last 100 subgraph entries\n      dispatch(fetchPublicLotteries({ currentLotteryId }))\n      // get public data for current lottery\n      dispatch(fetchCurrentLottery({ currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, fastRefresh])\n\n  useEffect(() => {\n    // get user tickets for current lottery, and user lottery subgraph data\n    if (account && currentLotteryId) {\n      dispatch(fetchUserTicketsAndLotteries({ account, currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, account])\n}\n\nexport const useLottery = () => {\n  const currentRound = useSelector((state: State) => state.lottery.currentRound)\n  const processedCurrentRound = useProcessLotteryResponse(currentRound)\n\n  const isTransitioning = useSelector((state: State) => state.lottery.isTransitioning)\n\n  const currentLotteryId = useGetCurrentLotteryId()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const lotteriesData = useGetLotteriesGraphData()\n\n  const maxNumberTicketsPerBuyOrClaimAsString = useSelector(\n    (state: State) => state.lottery.maxNumberTicketsPerBuyOrClaim,\n  )\n  const maxNumberTicketsPerBuyOrClaim = useMemo(() => {\n    return new BigNumber(maxNumberTicketsPerBuyOrClaimAsString)\n  }, [maxNumberTicketsPerBuyOrClaimAsString])\n\n  return {\n    currentLotteryId,\n    maxNumberTicketsPerBuyOrClaim,\n    isTransitioning,\n    userLotteryData,\n    lotteriesData,\n    currentRound: processedCurrentRound,\n  }\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1000px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      Loading...\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            \n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onOptionChange, ...props }) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 25px;\n  }\n`\n\nexport default FlexLayout\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BBC</Text>\n        </BaseWrapper>\n        \n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        // swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={280}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      {/* <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer> */}\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import { getBunnySpecialLotteryContract } from 'utils/contractHelpers'\nimport { UserRound } from 'state/types'\nimport { fetchUserTicketsForOneRound } from 'state/lottery/getUserTicketsData'\n\nexport interface LotteryNftMintData {\n  bunnyId: number | string\n  lotteryId: string\n  cursor: string\n}\n\nexport interface NftClaim {\n  canClaim: boolean\n  mintData: LotteryNftMintData\n}\n\nexport const NO_CLAIM: NftClaim = {\n  canClaim: false,\n  mintData: null,\n}\n\nexport const getLottieClaim = async (\n  account: string,\n  variationId: number | string,\n  lotteryId: string,\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  if (lotteryId) {\n    try {\n      const passesContractCheck = await lotteryNftContract.canClaimNft1(account, lotteryId)\n\n      if (passesContractCheck) {\n        return {\n          canClaim: true,\n          mintData: { bunnyId: variationId, lotteryId, cursor: '0' },\n        }\n      }\n    } catch (error) {\n      console.error(`Failed to check canClaim for Lottie`, error)\n      return NO_CLAIM\n    }\n  }\n\n  return NO_CLAIM\n}\n\nexport const getLuckyClaim = async (\n  account: string,\n  variationId: number | string,\n  userRounds: UserRound[],\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  const claimedWinningRounds = userRounds.filter((round) => round.claimed)\n  if (claimedWinningRounds.length > 0) {\n    const [winningRound] = claimedWinningRounds\n    const userTickets = await fetchUserTicketsForOneRound(account, winningRound.lotteryId)\n    const claimedTickets = userTickets.filter((ticket) => ticket.status)\n    const winningTicketCursor = userTickets.indexOf(claimedTickets[0])\n    // No winning ticket found for an expected winning round. Can happen when switching accounts.\n    if (winningTicketCursor < 0) {\n      return NO_CLAIM\n    }\n    try {\n      const passesContractCheck = await lotteryNftContract.canClaimNft2(\n        account,\n        winningRound.lotteryId,\n        winningTicketCursor.toString(),\n      )\n      if (passesContractCheck) {\n        return {\n          canClaim: true,\n          mintData: {\n            bunnyId: variationId,\n            lotteryId: winningRound.lotteryId,\n            cursor: winningTicketCursor.toString(),\n          },\n        }\n      }\n    } catch (error) {\n      console.error(`Failed to check canClaim for Lucky`, error)\n      return NO_CLAIM\n    }\n  }\n  return NO_CLAIM\n}\n\nexport const getBallerClaim = async (\n  account: string,\n  variationId: number | string,\n  lotteryId?: string,\n): Promise<NftClaim> => {\n  const lotteryNftContract = getBunnySpecialLotteryContract()\n\n  try {\n    const isWhitelisted = await lotteryNftContract.userWhitelistForNft3(account)\n    if (isWhitelisted) {\n      try {\n        const passesContractCheck = await lotteryNftContract.canClaimNft3(account)\n        if (passesContractCheck) {\n          return {\n            canClaim: true,\n            mintData: { bunnyId: variationId, lotteryId, cursor: '0' },\n          }\n        }\n      } catch (error) {\n        console.error(`Failed to check canClaim for Baller`, error)\n        return NO_CLAIM\n      }\n    }\n  } catch (error) {\n    console.error(`Failed to check whitelist for ${account}`, error)\n    return NO_CLAIM\n  }\n  return NO_CLAIM\n}\n","import { useEffect, useState, useCallback } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { useGetCurrentLotteryId } from 'state/lottery/hooks'\nimport { getGraphLotteryUser } from 'state/lottery/getUserLotteryData'\nimport { UserRound } from 'state/types'\nimport { getBunnySpecialLotteryAddress } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport Nfts from 'config/constants/nfts'\nimport { fetchCurrentLotteryId } from 'state/lottery'\nimport { getBallerClaim, getLottieClaim, getLuckyClaim, NftClaim, NO_CLAIM } from '../helpers'\n\nconst useBunnySpecialLottery = (): {\n  canClaimLottie: () => Promise<NftClaim>\n  canClaimLucky: () => Promise<NftClaim>\n  canClaimBaller: () => Promise<NftClaim>\n} => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n  const currentLotteryIdNum = currentLotteryId && parseInt(currentLotteryId)\n  const [userRounds, setUserRounds] = useState<UserRound[]>(null)\n\n  useEffect(() => {\n    dispatch(fetchCurrentLotteryId())\n  }, [dispatch])\n\n  useEffect(() => {\n    setUserRounds(null)\n  }, [account])\n\n  useEffect(() => {\n    const getUserData = async () => {\n      const lotteryNftContractAddress = getBunnySpecialLotteryAddress()\n      const calls = [\n        {\n          name: 'startLotteryRound',\n          address: lotteryNftContractAddress,\n          params: [],\n        },\n        {\n          name: 'finalLotteryRound',\n          address: lotteryNftContractAddress,\n          params: [],\n        },\n      ]\n\n      const [[startRound], [finalRound]] = await multicallv2(bunnySpecialLotteryAbi, calls)\n      const startLotteryRoundInt = startRound.toNumber()\n      const finalLotteryRoundInt = finalRound.toNumber()\n\n      const lotteryIdsArray = []\n      for (let i = startLotteryRoundInt; i <= finalLotteryRoundInt; i++) {\n        lotteryIdsArray.push(`${i}`)\n      }\n      const userParticipation = await getGraphLotteryUser(account, undefined, undefined, {\n        lottery_in: lotteryIdsArray,\n      })\n      setUserRounds(userParticipation.rounds)\n    }\n\n    if (account && currentLotteryIdNum && !userRounds) {\n      getUserData()\n    }\n  }, [currentLotteryIdNum, userRounds, account])\n\n  const canClaimLottie = useCallback(async () => {\n    if (!userRounds || userRounds.length === 0) {\n      return NO_CLAIM\n    }\n\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'lottie')\n    const [userRound] = userRounds\n    const lottieClaim = await getLottieClaim(account, variationId, userRound.lotteryId)\n    return lottieClaim\n  }, [account, userRounds])\n\n  const canClaimLucky = useCallback(async () => {\n    if (!userRounds || userRounds.length === 0) {\n      return NO_CLAIM\n    }\n\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'lucky')\n    const luckyClaim = await getLuckyClaim(account, variationId, userRounds)\n    return luckyClaim\n  }, [account, userRounds])\n\n  const canClaimBaller = useCallback(async () => {\n    const { variationId } = Nfts.find((nft) => nft.identifier === 'baller')\n    const lotteryId = userRounds && userRounds.length > 0 && userRounds[0].lotteryId\n\n    const lottieClaim = await getBallerClaim(account, variationId, lotteryId)\n    return lottieClaim\n  }, [account, userRounds])\n\n  return { canClaimLottie, canClaimLucky, canClaimBaller }\n}\n\nexport default useBunnySpecialLottery\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BBCScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader style={{background:\"transparent\"}}>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  // {\n  //   label: t('Trade'),\n  //   icon: 'TradeIcon',\n  //   items: [\n  //     {\n  //       label: t('Exchange'),\n  //       href: '/swap',\n  //     },\n  //     {\n  //       label: t('Liquidity'),\n  //       href: '/pool',\n  //     },\n  //   ],\n  // },\n  {\n    label: t('Swap'),\n    icon: 'TradeIcon',\n    href: '/swap',\n  },\n  {\n    label: t('Liquidity'),\n    icon: 'PoolIcon',\n    href: '/pool',\n  },\n  {\n    label: t('Farming'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Staking'),\n    icon: 'StakingIcon',\n    href: '/pools',\n  }, \n  {\n    label: t('Info'),\n    icon: 'InfoIcon',\n    href: '/info',\n  },\n  {\n    label: t('Launchpad'),\n    icon: 'IfoIcon',\n    href: 'https://gaspad.io/'\n  }, \n  // {\n  //   label: t('Referral'),\n  //   icon: 'ReferralIcon',\n  //   href: '/referral',\n  // },  \n  // {\n  //   label: t('Lottery'),\n  //   icon: 'LotteryIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: t('Prediction (BETA)'),\n  //   icon: 'PredictionsIcon',\n  //   href: '/prediction',\n  // },\n  // {\n  //   label: t('Lottery'),\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: t('Collectibles'),\n  //   icon: 'NftIcon',\n  //   href: '/collectibles',\n  // },\n  // {\n  //   label: t('Team Battle'),\n  //   icon: 'TeamBattleIcon',\n  //   href: '/competition',\n  // },\n  // {\n  //   label: t('Teams & Profile'),\n  //   icon: 'GroupsIcon',\n  //   items: [\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       label: t('Task Center'),\n  //       href: '/profile/tasks',\n  //     },\n  //     {\n  //       label: t('Your Profile'),\n  //       href: '/profile',\n  //     },\n  //   ],\n  // },\n \n  {\n    label: t('More'),\n    icon: 'MoreIcon',\n    items: [\n      // {\n      //   label: t('Contact'),\n      //   href: 'https://docs.pancakeswap.finance/contact-us',\n      // },\n      // {\n      //   label: t('Voting'),\n      //   href: '/voting',\n      // },\n      {\n        label: t('Github'),\n        href: 'https://github.com/flamez-io',\n      },\n      {\n        label: t('Whitepaper'),\n        href: 'http://docs.flamez.io/',\n      },\n      // {\n      //   label: t('SolidProof'),\n      //   href: 'https://solidproof.io/',\n      // },\n      // {\n      //   label: t('Merch'),\n      //   href: 'https://pancakeswap.creator-spring.com/',\n      // },\n    ],\n  },\n]\n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    \n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BBC Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BBC for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BBC Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('AME Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on BBCScan')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      {/* <UserMenuDivider />\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} />\n      <UserMenuDivider /> */}\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      globalMenu={<GlobalSettings />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </ApyLabelContainer>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 31.5%;\n  min-width: 280px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 100px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://flamez-dex.netlify.app/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.cake.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\n          </ToastDescriptionWithTx>,\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(\n        t('Contract Enabled'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n              \n              <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\"  style={{color:\"#268ac4\", borderColor:\"#268ac4\"}} onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { useReferralManager } from 'state/user/hooks'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const [userReferral, setReferral] = useReferralManager()\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount, userReferral)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, userReferral],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { useReferralManager } from 'state/user/hooks'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const [userReferral, setReferral] = useReferralManager()\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount, userReferral)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId, userReferral],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { useReferralManager } from 'state/user/hooks'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n  const [userReferral, setReferral] = useReferralManager()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0, userReferral)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, userReferral])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake AME into pool.')}</Text>\n      <Text>{t('Harvest: collect AME and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')}\n      style={{height:\"600px\"}} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new AME in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Staked!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the pool')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n  performanceFee: number\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n            performanceFee={performanceFee}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.cake}\n        stakingToken={tokens.cake}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions\n              pool={pool}\n              accountHasSharesStaked={accountHasSharesStaked}\n              isLoading={isLoading}\n              performanceFee={performanceFeeAsDecimal}\n            />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\n\n  if (isAutoVault) {\n    title = t('Auto Staking')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual Staking')\n    subtitle = `${t('Earn')} AME ${t('Stake').toLocaleLowerCase()} AME`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          {isCompoundPool ? t('Collect') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer isAutoVault={isAutoVault}>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface AutoHarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const earningTokenBalance = autoCakeToDisplay\n  const earningTokenDollarBalance = autoUsdToDisplay\n  const hasEarnings = hasAutoEarnings\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer isAutoVault>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n          <UnstakingFeeCountdownRow isTableVariant />\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n            {tooltipVisible && tooltip}\n            <TooltipText ref={targetRef} small>\n              {t('Performance Fee')}\n            </TooltipText>\n            <Flex alignItems=\"center\">\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default AutoHarvestAction\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\nimport AutoHarvest from './AutoHarvest'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://flamez-dex.netlify.app/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} AME ${t('Stake').toLocaleLowerCase()} AME`}\n          </Text>\n        )}\n        {pool.isAutoVault ? (\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\n        ) : (\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        )}\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface AutoEarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { earningTokenPrice } = pool\n\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const labelText = t('Recent CAKE profit')\n  const earningTokenBalance = autoCakeToDisplay\n  const hasEarnings = hasAutoEarnings\n  const earningTokenDollarBalance = autoUsdToDisplay\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {hasEarnings && !isMobile && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoEarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\nimport { convertSharesToCake } from '../../../helpers'\n\ninterface AprCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const {\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APY')}\n        </Text>\n        <Apr\n          pool={pool}\n          stakedBalance={cakeAsBigNumber}\n          performanceFee={performanceFeeAsDecimal}\n          showIcon={!isMobile}\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoAprCell\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        {pool.isAutoVault ? (\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        ) : (\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        )}\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n        {isDesktop && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap/uikit'\r\n\r\nconst Link = styled.a`\r\n  width: 100%;\r\n  \r\n`\r\n\r\nconst CardWraper = styled.div`\r\n  background-image: url(/images/Staking.png);\r\n  background-repeat: no-repeat;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  \r\n  height: 230px;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  border-radius: 19px;\r\n  padding-bottom: 20px;\r\n`\r\n\r\nconst Content = styled.div`\r\n  padding: 24px;\r\n  display: flex;\r\n`\r\nconst LinkImage = styled.img`\r\n  width: 300px;\r\n  margin-top: -3px;\r\n  -webkit-align-items: right;\r\n  display: flex;\r\n   justify-content: right;\r\n   align-items: right;\r\n\r\n   @media screen and (max-width: 800px) {\r\n    width: 0px;\r\n  }\r\n`\r\n\r\nconst StyledTitle = styled(Text)`\r\n  padding: 20px;\r\n  font-size: 30px;\r\n  text-align: left;\r\n  color: white;\r\n  @media screen and (max-width: 500px) {\r\n    padding: 0px;\r\n  }\r\n`\r\nconst StyledText = styled(Text)`\r\n  padding: 20px;\r\n  font-size: 19px;\r\n  text-align: left;\r\n  color: white;\r\n  @media screen and (max-width: 500px) {\r\n    padding: 0px;\r\n  }\r\n`\r\ninterface HeaderProps {\r\n  title: string\r\n}\r\n\r\nconst Header = ({title} : HeaderProps) => {\r\n\r\n  return (\r\n        <CardWraper >\r\n          <Content>\r\n            {/* <div>\r\n              <StyledTitle>{title}</StyledTitle>\r\n              <StyledText>\r\n                \r\n              </StyledText>\r\n            </div> */}\r\n            {/* <LinkImage src=\"/images/rocket.svg\" alt=\"Link Image\" /> */}\r\n          </Content>\r\n        </CardWraper>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\nimport Header from './components/Header'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LaunchpadRocket = styled.div`\n  width: 300px;\n  margin-top: 47px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  // margin-left: 344px;\n  // -webkit-align-items: right;\n   \n  //  @media screen and (max-width: 800px) {\n  //   margin-left: 189px;\n  //   margin-top: 86px;\n  // }\n\n  // @media screen and (max-width: 600px) {\n  //   margin-left: 40px;\n  //   margin-top: 86px;\n  // }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 63px;\n\n  }\n  \n   \n`\nconst LinkImage = styled.img`\n  width: 150px;\n  // margin-top: 15px;\n  // margin-left: 77px;\n  -webkit-align-items: center;\n  display: flex;\n   justify-content: center;\n   align-items: center;\n   \n   @media screen and (max-width: 800px) {\n  }\n  \n   \n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsPublicData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            let totalStaked = Number.NaN\n            if (pool.isAutoVault) {\n              if (totalCakeInVault.isFinite()) {\n                totalStaked = +formatUnits(\n                  ethers.BigNumber.from(totalCakeInVault.toString()),\n                  pool.stakingToken.decimals,\n                )\n              }\n            } else if (pool.sousId === 0) {\n              if (pool.totalStaked?.isFinite() && totalCakeInVault.isFinite()) {\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\n                  totalCakeInVault.toString(),\n                )\n                totalStaked = +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals)\n              }\n            } else if (pool.totalStaked?.isFinite()) {\n              totalStaked = +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals)\n            }\n            return Number.isFinite(totalStaked) ? totalStaked : 0\n          },\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(1, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>      \n      <Page>\n      <Header title=\"Staking\"/>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        {/* <div style={{display: \"flex\", justifyContent:\"center\", width: \"100%\"}}>\n          <LaunchpadRocket>\n            <LinkImage src=\"/images/2498098.png\" alt=\"Link Image\" />\n            <h6 style={{color:'#6d6d6d', fontSize:'20px', textAlign:'center'}}>Currently there is no opening projects</h6>\n          </LaunchpadRocket>\n        </div> */}\n\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BBCScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  // border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border: 1px solid rgba(0, 148, 255, 1);\n  background: radial-gradient(43.91% 300.21% at 56.09% -78.09%,rgb(5 42 87) 21.87%,rgb(3 22 45) 100%);\n  \n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                  <Text>- 0.05% towards FLAMEZ buyback and burn</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n                <Text>- 0.05% towards FLAMEZ buyback and burn</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: #0A0E46;\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)} style={{background: 'radial-gradient(43.91% 300.21% at 56.09% -78.09%, #1E61B7 26.56%, #042148 98.96%)', border:\"1px solid #0094FF\", borderRadius:\"16px\"}}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BBC to WBBC` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BBC balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBBC to BBC` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBBC balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { ChainId, CurrencyAmount, JSBI, Token, Trade, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps, Route, useRouteMatch, Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { getAddress } from 'utils/addressHelpers'\nimport { WBNB } from 'config/constants/tokens'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { CustomGreyCard, GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, SwapBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens, useToken } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\nimport SwapTokenDetailsHorizontal from './components/SwapTokenDetailsHorizontal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  ///\n  const [clickIndex1, setIndex] = useState(0);\n  const handleClick = (newIndex) => setIndex(newIndex);\n  const { path, url, isExact } = useRouteMatch();\n  ///\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n\n  const [inputedCurrency, setInputedCurrency] = useState()\n  // const [inputedCurrency, setInputedCurrency] = useState()\n  // const [inputCurrency, setInputCurrency] = useState()\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient, [Field.INPUT]: { currencyId: inputCurrencyId },[Field.OUTPUT]: { currencyId: outputCurrencyId } } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  \n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  const [selectedAddress, setSelectedAddress] = useState<string[]>([\"0xc71691d2586722307Bc1105F01E2C312b43d02E5\",\"0x52cd33c4c0CA3d0eD69Eff8cf423e4eBc3cBee27\"])\n  useEffect(() => {\n    let inputId = inputCurrencyId\n    let outputId = outputCurrencyId\n    if(inputId === '')\n      inputId = WBNB.address\n    if(outputId === '')\n      outputId = '0x52cd33c4c0CA3d0eD69Eff8cf423e4eBc3cBee27'\n    if (inputId.toUpperCase() === 'BBC') {\n      inputId = WBNB.address\n    }\n    if (outputId.toUpperCase() === 'BBC') {\n      outputId = WBNB.address\n    }\n    const newAddresses : string[] = [inputId.toLowerCase(), outputId.toLowerCase()];\n    setSelectedAddress(newAddresses)\n  }, [inputCurrencyId, outputCurrencyId])\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n  \n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      setInputedCurrency(inputCurrency.tokenInfo);\n      \n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <ButtonMenu activeIndex={clickIndex1} onItemClick={handleClick} scale=\"md\" variant=\"primary\" marginBottom=\"20px\">\n             <ButtonMenuItem as={Link} to={`${url}`}>\n               {t('Swap')}\n             </ButtonMenuItem>\n             <ButtonMenuItem as={Link} to=\"/liquidity\">\n               {t('Liquidity')}\n             </ButtonMenuItem>\n      </ButtonMenu>\n      <SwapBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"30px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <CustomGreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </CustomGreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </SwapBody>\n\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n        ) : (\n          <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n          )}\n      {/* {inputCurrencyId && <SwapTokenDetailsHorizontal addresses={selectedAddress}/>} */}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport confetti from 'canvas-confetti'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport { useTranslation } from 'contexts/Localization'\nimport { Nft } from 'config/constants/types'\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  margin-right: 8px;\n  width: 128px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\ninterface NftGiveawayModalProps extends InjectedModalProps {\n  nfts: Nft[]\n}\n\nconst NftGiveawayModal: React.FC<NftGiveawayModalProps> = ({ onDismiss, nfts }) => {\n  const { t } = useTranslation()\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  const getImages = () => {\n    return nfts.map((nft) => <NftImage key={nft.variationId} src={`/images/nfts/${nft.images.md}`} />)\n  }\n\n  return (\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Flex flexWrap=\"wrap\" alignItems=\"center\" justifyContent=\"center\">\n          {getImages()}\n        </Flex>\n        <Text textAlign=\"center\" bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {nfts.length > 1 ? t('You won multiple collectibles!') : t('You won a collectible!')}\n        </Text>\n        <Button onClick={handleClick}>{t('Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default NftGiveawayModal\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { useModal } from '@pancakeswap/uikit'\nimport { Nft } from 'config/constants/types'\nimport nfts from 'config/constants/nfts'\nimport NftGiveawayModal from './NftGiveawayModal'\nimport useBunnySpecialLottery from '../hooks/useBunnySpecialLottery'\n\ninterface GlobalCheckClaimStatusProps {\n  excludeLocations: string[]\n}\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckClaimStatus: React.FC<GlobalCheckClaimStatusProps> = ({ excludeLocations }) => {\n  const hasDisplayedModal = useRef(false)\n  const [claimableNfts, setClaimableNfts] = useState<Nft[]>([])\n  const [onPresentGiftModal] = useModal(<NftGiveawayModal nfts={claimableNfts} />)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const { canClaimBaller, canClaimLottie, canClaimLucky } = useBunnySpecialLottery()\n\n  // Check claim status\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimable: Nft[] = []\n\n      const nftConfigMap = {\n        lottie: nfts.find((nft) => nft.identifier === 'lottie'),\n        lucky: nfts.find((nft) => nft.identifier === 'lucky'),\n        baller: nfts.find((nft) => nft.identifier === 'baller'),\n      }\n\n      const { canClaim: isBallerClaimable } = await canClaimBaller()\n      const { canClaim: isLottieClaimable } = await canClaimLottie()\n      const { canClaim: isLuckyClaimable } = await canClaimLucky()\n\n      if (isBallerClaimable) {\n        claimable.push(nftConfigMap.baller)\n      }\n\n      if (isLottieClaimable) {\n        claimable.push(nftConfigMap.lottie)\n      }\n\n      if (isLuckyClaimable) {\n        claimable.push(nftConfigMap.lucky)\n      }\n\n      setClaimableNfts(claimable)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, canClaimBaller, canClaimLottie, canClaimLucky])\n\n  // Check if we need to display the modal\n  useEffect(() => {\n    const matchesSomeLocations = excludeLocations.some((location) => pathname.includes(location))\n\n    if (claimableNfts.length > 0 && !matchesSomeLocations && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, excludeLocations, hasDisplayedModal, onPresentGiftModal, claimableNfts])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckClaimStatus\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\nimport GlobalCheckClaimStatus from './views/Collectibles/components/GlobalCheckClaimStatus'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst PredictionsLeaderboard = lazy(() => import('./views/Predictions/Leaderboard'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst Info = lazy(() => import('./views/Info'))\nconst Referral = lazy(() => import('./views/Referral'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <GlobalCheckClaimStatus excludeLocations={['/collectibles']} />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact  component={Swap}>\n              {/* <Home /> */}\n            </Route>\n            <Route exact path=\"/pool\">\n              <Liquidity />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/referral\">\n              <Referral />\n            </Route>\n            <Route path=\"/info\">\n              <Info />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route exact path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route path=\"/prediction/leaderboard\">\n              <PredictionsLeaderboard />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  console.log(\"isDark: \", isDark)\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}